#pragma kernel Paint

RWTexture2D<float4> result;
RWTexture2D<float4> strokeIDs;
float2 cursorPos;
float2 lastCursorPos;
float2 startPos;
float brushSize;
float timeColor;
float strokeID;
bool drawing;

float LineSegment2DSDF(float2 p, float2 a, float2 b)
{
    float2 ba = b - a;
    float2 pa = p - a;
    float k = saturate(dot(pa, ba) / dot(ba, ba));
    return length(pa - ba * k);
}

[numthreads(32,32,1)]
void Paint (uint3 id : SV_DispatchThreadID)
{
    float2 paintPos = startPos.xy + id.xy;
    
    float paintColor = LineSegment2DSDF(paintPos, cursorPos, lastCursorPos);
    paintColor = smoothstep(brushSize, brushSize - 5, paintColor);
    paintColor *= timeColor;
    if(paintColor > result[paintPos].x )
    {
        if(drawing)
        {
            result[paintPos] = float4(paintColor, paintColor, paintColor, 1);
            strokeIDs[paintPos] = float4(strokeID, strokeID, strokeID, 1);
            return;
        }
        if(strokeID == strokeIDs[paintPos].r || strokeIDs[paintPos].r == 0)
        {
            result[paintPos] = float4(paintColor, paintColor, paintColor, 1);
            strokeIDs[paintPos] = float4(strokeID, strokeID, strokeID, 1);
        }
    }
}
